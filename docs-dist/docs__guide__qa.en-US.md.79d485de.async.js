(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[53],{NKIg:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),r=a.n(n),o=a("dEAq"),i=a("H1Ra"),s=r.a.memo((e=>{e.demos;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"faq"},r.a.createElement(o["AnchorLink"],{to:"#faq","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"FAQ"),r.a.createElement("h3",{id:"where-is-the-rap-repo"},r.a.createElement(o["AnchorLink"],{to:"#where-is-the-rap-repo","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Where is the rap repo?"),r.a.createElement("p",null,"Github:"),r.a.createElement("p",null,r.a.createElement(o["Link"],{to:"https://github.com/infra-fe/rap-client"},"https://github.com/infra-fe/rap-client")),r.a.createElement("p",null,r.a.createElement(o["Link"],{to:"https://github.com/infra-fe/rap-server"},"https://github.com/infra-fe/rap-server")),r.a.createElement("p",null,r.a.createElement(o["Link"],{to:"https://github.com/infra-fe/rapper"},"https://github.com/infra-fe/rapper")),r.a.createElement("h3",{id:"how-can-i-import-repository"},r.a.createElement(o["AnchorLink"],{to:"#how-can-i-import-repository","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"How can I import repository\uff1f"),r.a.createElement("p",null,"see ",r.a.createElement(o["Link"],{to:"https://infra-fe.github.io/rap-client/guide/import/rap"},"import")),r.a.createElement("h3",{id:"how-can-i-import-data-with-two-dimensional-array"},r.a.createElement(o["AnchorLink"],{to:"#how-can-i-import-data-with-two-dimensional-array","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"How can I import data with two-dimensional array?"),r.a.createElement("p",null,"If there is something wrong when you import data with two-dimensional array, you can edit the data manually."),r.a.createElement("h3",{id:"why-it-throw-an-error-like-this-when-i-use-rapper-first"},r.a.createElement(o["AnchorLink"],{to:"#why-it-throw-an-error-like-this-when-i-use-rapper-first","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Why it throw an error like this when I use rapper first?"),r.a.createElement("p",null,"Maybe the path is relative, you need to set the prefix in the entrance of your project."),r.a.createElement(i["a"],{code:"// set global config\n// when you are in develop env, you can set the prefix to your own repo, like /app/mock/3/\n// when you are in live env, you can set the prefix to the real server link\nconst prefix = process.env.NODE_ENV === 'development' ? 'http://***/' : ''\noverrideFetch({\n  prefix, //interface base url\n})",lang:"ts"}),r.a.createElement("h3",{id:"how-to-set-headers-and-query-parameters-in-rapper"},r.a.createElement(o["AnchorLink"],{to:"#how-to-set-headers-and-query-parameters-in-rapper","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"How to set headers and query parameters in rapper?"),r.a.createElement("p",null,"This is only support in normal and ahooks mode in rapper now."),r.a.createElement("p",null,"Scene 1 : auto send headers and query parameters"),r.a.createElement("p",null,"First, you need to config in the repository"),r.a.createElement("p",null,"Second, use the fetch or useFetch method just send as normal parameters, it will handle them automatically."),r.a.createElement(i["a"],{code:"const { data, run } = useFetch('POST/example/test', { p_query: '1', p_header: '2', p_body: 3});\n\nfetch['POST/example/test]({ p_query: '1', p_header: '2', p_body: 3})",lang:"ts"}),r.a.createElement("p",null,'Scene 2: send more headers and query parameters temporarily, you can use the "extra" parameter'),r.a.createElement(i["a"],{code:"const { data, run } = useFetch(\n  'POST/example/test',\n  { p_query: '1', p_header: '2', p_body: 3}, \n  {},\n  {query: {p_extra_query: 'first'}, headers: {content-type: 'text/plain'}} // the extra parameter, it is optional\n);\n\nfetch['POST/example/test](\n  { query: '1', header: '2', body: 3},\n  {query: {p_extra_query: 'first'}, headers: {content-type: 'text/plain'}} // the extra parameter, it is optional\n)",lang:"ts"}),r.a.createElement("p",null,"Scene 3: If you want to use your own method to handle special parameters that set in the platform, you can import the extra file to get them."),r.a.createElement(i["a"],{code:"enum ReqPosType {\n  header = 1,\n  query = 2,\n  body = 3,\n}\n\nimport { IReqType } from 'rapper/extra'\n\nexport const IReqType = {\n  'POST/ttttt.com': { '1': 2, 'Content-Type': 1 },\n  'GET/{username}/:id/ttttt.com': { Accept: 1 },\n};",lang:"ts"}),r.a.createElement("h3",{id:"which-mode-should-i-choose-in-rapper"},r.a.createElement(o["AnchorLink"],{to:"#which-mode-should-i-choose-in-rapper","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Which Mode should I choose in rapper?"),r.a.createElement("p",null,"@Infra/rapper has three mode: hooks, basic, redux, you can choose depend on your own project:"),r.a.createElement("p",null,"Option 1\uff1aHooks"),r.a.createElement("p",null,"On top of the basic mode, a encapsulation based on ahooks useRequest is provided for you to easily manage the hooks of asynchronous requests, such as loading status and data caching."),r.a.createElement(i["a"],{code:"import { useFetch } from 'src/rapper'\nconst { data, loading, run: refresh } = useFetch(\n  'GET/api/getList',\n  { id: 1 }\n)",lang:"ts"}),r.a.createElement("p",null,"Option 2\uff1aBasic"),r.a.createElement("p",null,"Generate the TypeScript type definition of the interface and the request function in the form of each interface Promise for you, applicable to all TypeScript-based projects."),r.a.createElement(i["a"],{code:"import { fetch } from 'rapper/index'\n\n// directly use fetch to request\uff0cyou can easily get hints\nfetch['GET/example/rapper']({\n  // request params\n  foo: 'foo'\n}).then(res => {\n  // return value\n  const nameList = res.taskList.map(e => e.name);\n})",lang:"ts"}),r.a.createElement("p",null,"Option 3\uff1aRedux"),r.a.createElement("p",null,"On top of the basic mode, it provides you with a Redux-based global data management package, helps you generate typed request action/reducer code, provides global interface data caching, and uses data easily through React Hooks, suitable for React+Redux project."),r.a.createElement(i["a"],{code:"import { useResponse } from 'model/rapper'\n\nconst [responseData, { id, isPending, errorMessage }] = useResponse['GET/adgroup/price/update$']()",lang:"ts"})))}));t["default"]=e=>{var t=r.a.useContext(o["context"]),a=t.demos;return r.a.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&o["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.a.createElement(s,{demos:a})}}}]);