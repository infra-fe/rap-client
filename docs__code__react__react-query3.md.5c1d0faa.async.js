(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[13],{EzGu:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),r=t.n(a),i=t("dEAq"),c=t("H1Ra"),o=r.a.memo((e=>{e.demos;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"rapperreact-query3"},r.a.createElement(i["AnchorLink"],{to:"#rapperreact-query3","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"@rapper/react-query3"),r.a.createElement("p",null,r.a.createElement("code",null,"@rapper/react-query3")," based on ",r.a.createElement(i["Link"],{to:"https://react-query-v3.tanstack.com/overview"},"react-query@3")),r.a.createElement("h3",{id:"1-click-generate-ts-code"},r.a.createElement(i["AnchorLink"],{to:"#1-click-generate-ts-code","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"1. Click ",r.a.createElement("code",null,"Generate TS code")),r.a.createElement("img",{width:"850px",src:t("WZFi")}),r.a.createElement("h3",{id:"2-select-rapper30--basic-mode"},r.a.createElement(i["AnchorLink"],{to:"#2-select-rapper30--basic-mode","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"2. Select ",r.a.createElement("code",null,"Rapper3.0")," & ",r.a.createElement("code",null,"Basic Mode")),r.a.createElement("img",{width:"850px",src:t("au+y")}),r.a.createElement("h3",{id:"3-then-install-react-query3--rapperreact-query3"},r.a.createElement(i["AnchorLink"],{to:"#3-then-install-react-query3--rapperreact-query3","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"3. Then install ",r.a.createElement("code",null,"react-query@3")," & ",r.a.createElement("code",null,"@rapper/react-query3")),r.a.createElement(c["a"],{code:"yarn add @rapper/react-query3 react-query@3",lang:"bash"}),r.a.createElement("h3",{id:"tips"},r.a.createElement(i["AnchorLink"],{to:"#tips","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Tips"),r.a.createElement("blockquote",null,r.a.createElement("p",null,"Remember to add ",r.a.createElement("code",null,"QueryClientProvider"),". (",r.a.createElement(i["Link"],{to:"https://react-query-v3.tanstack.com/quick-start"},"React Query3 Quick Start"),")")),r.a.createElement(c["a"],{code:"import { QueryClient, QueryClientProvider } from 'react-query'\n\n// Create a client\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    // Provide the client to your App\n    <QueryClientProvider client={queryClient}>\n      <Todos />\n    </QueryClientProvider>\n  )\n}",lang:"ts"}),r.a.createElement("h3",{id:"usage"},r.a.createElement(i["AnchorLink"],{to:"#usage","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Usage"),r.a.createElement(c["a"],{code:"// utils.ts\nimport { http } from 'src/rapper'\nimport {\n  createUseRapperMutation,\n  createUseRapperQuery,\n  createUseRapperQueries,\n  createUseRapperInfiniteQuery,\n  createRapperQueryOptions,\n} from '@rapper/react-query3'\n\nexport const useRapperQuery = createUseRapperQuery(http, {\n  baseURL: '/app/mock/150',\n})\nexport const useRapperQueries = createUseRapperQueries(http, {\n  baseURL: '/app/mock/150',\n})\nexport const useRapperMutation = createUseRapperMutation(http, {\n  baseURL: '/app/mock/150',\n})\nexport const useRapperInfiniteQuery = createUseRapperInfiniteQuery(http, {\n  baseURL: '/app/mock/150',\n})\nexport const op = createRapperQueryOptions(http)",lang:"ts"}),r.a.createElement("h3",{id:"userapperquery"},r.a.createElement(i["AnchorLink"],{to:"#userapperquery","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"useRapperQuery"),r.a.createElement(c["a"],{code:"import React from 'react'\nimport { Button } from 'antd'\nimport { useRapperQuery } from './utils'\n\nconst UseRapperQueryApp: React.FC = () => {\n  const [id, setId] = React.useState(1)\n  const { data, isLoading, isFetching } = useRapperQuery(\n    'GET/build/detail',\n    { id: id.toString() },\n    {\n      onSuccess(data) {\n        console.log(data.data.buildStatus)\n      },\n    }\n  )\n  return (\n    <div>\n      <Button onClick={() => setId((x) => x + 1)}>refresh</Button>\n      <ul>\n        <li>isLoading: {isLoading.toString()}</li>\n        <li>isFetching: {isFetching.toString()}</li>\n      </ul>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  )\n}",lang:"ts"}),r.a.createElement("h3",{id:"userapperqueries"},r.a.createElement(i["AnchorLink"],{to:"#userapperqueries","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"useRapperQueries"),r.a.createElement(c["a"],{code:"import React from 'react'\nimport { Button } from 'antd'\nimport { useRapperQueries } from './utils'\n\nconst UseRapperQueriesApp: React.FC = () => {\n  const [count, setCount] = React.useState(1)\n  const ids = React.useMemo(\n    () => new Array(count).fill(0).map((_, index) => index + 1),\n    [count]\n  )\n\n  const results = useRapperQueries({\n    // queries: [['GET/build/detail', { id: ids[0].toString() }, { refetchInterval: 5000 }]],\n    queries: [\n      {\n        url: 'GET/build/detail',\n        params: { id: ids[0].toString() },\n      } as const,\n    ],\n\n    // queries: ids.map((x) => ['GET/build/detail', { id: x.toString() }, { refetchInterval: 5000 }]),\n\n    // queries: ids.map((x) =>\n    //   op('GET/build/detail', { id: x.toString() }, { refetchInterval: 5000 }),\n    // ),\n  })\n\n  return (\n    <div>\n      <Button onClick={() => setCount((x) => x + 1)}>count + 1</Button>\n      {results.map((x, index) => (\n        <div key={index}>\n          <ul>\n            <li>isLoading: {x.isLoading.toString()}</li>\n            <li>isFetching: {x.isFetching.toString()}</li>\n          </ul>\n          <pre>{JSON.stringify(x.data, null, 2)}</pre>\n        </div>\n      ))}\n    </div>\n  )\n}",lang:"ts"}),r.a.createElement("h3",{id:"userappermutation"},r.a.createElement(i["AnchorLink"],{to:"#userappermutation","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"useRapperMutation"),r.a.createElement(c["a"],{code:"import React from 'react'\nimport { Button } from 'antd'\nimport { useRapperMutation } from './utils'\n\nconst UseRapperMutationApp: React.FC = () => {\n  const { mutate, data, isLoading } = useRapperMutation('POST/build/create')\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          mutate({\n            projectName: 'test',\n            moduleName: '',\n            gitBranch: '',\n            gitUrl: '',\n            remark: '',\n            cids: '',\n            env: '',\n            serviceId: '',\n            jobType: '',\n          })\n        }\n      >\n        mutate\n      </Button>\n      <ul>\n        <li>isLoading: {isLoading.toString()}</li>\n      </ul>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  )\n}",lang:"ts"}),r.a.createElement("h3",{id:"userapperinfinitequery"},r.a.createElement(i["AnchorLink"],{to:"#userapperinfinitequery","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"useRapperInfiniteQuery"),r.a.createElement(c["a"],{code:"import React from 'react'\nimport { Button } from 'antd'\nimport { useRapperInfiniteQuery } from './utils'\n\nconst UseRapperInfiniteQueryApp: React.FC = () => {\n  const [id, setId] = React.useState(1)\n  const { data, fetchNextPage, isLoading, isFetching } = useRapperInfiniteQuery(\n    'GET/build/detail',\n    {\n      id: id.toString(),\n    },\n    {\n      keepPreviousData: true,\n      getNextPageParam: (_lastPage, _pages) => ({\n        cursor: Math.random().toString().slice(2),\n      }),\n    }\n  )\n  return (\n    <div>\n      <Button onClick={() => setId((x) => x + 1)}>refresh</Button>\n      <Button onClick={() => fetchNextPage()}>Next Page</Button>\n      <ul>\n        <li>isLoading: {isLoading.toString()}</li>\n        <li>isFetching: {isFetching.toString()}</li>\n      </ul>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  )\n}",lang:"ts"})))}));n["default"]=e=>{var n=r.a.useContext(i["context"]),t=n.demos;return r.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.a.createElement(o,{demos:t})}},WZFi:function(e,n,t){e.exports=t.p+"static/ts-generate.b75bbf35.jpg"},"au+y":function(e,n,t){e.exports=t.p+"static/normal-mode.10215453.jpg"}}]);